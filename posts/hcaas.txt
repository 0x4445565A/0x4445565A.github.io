    "Blank As A Service" is an idea that is some what out of control in the software development world.  So I decided to contribute to this issue by making Human Connection As A Service!

<h2>Why</h2>
    In a discussion with Twitter user <a href="https://twitter.com/co60ca" target="_blank" nofollow>@co60ca</a> he brought up his <a href="https://github.com/co60ca/nicethings.py">NiceThings.py</a> script.  I decided I wanted this to be a <a href="https://github.com/0x4445565A/nice-things" target="_blank" nofollow>Go package</a> and that's just what I did.  At this point I realized I had a program that made these sayings but nothing to do with them. <b>PERFECT FOR A SERVICE!</b>

<h2>The Result</h2>
    Making calls to hcaas.ibreak.systems or hcaas.ibreak.systems/?token=name will give you an output of a nice thing to say to the token.  This is done with the <a href="https://github.com/0x4445565A/nice-things" target="_blank" nofollow>niceThings Package</a> and a small HTTP go program to spit out the values(example in README.md).

<small>This isn't a screen shot it's a working demo if you're so inclined</small>
<iframe src="./hcaas.html" style="border: none;overflow:hidden;margin:0 auto;width:50%;height:200px;"></iframe>


<h2>The Service Code</h2>
    Here is the code for the service in all of its glory.  I know...  Amazing..

<pre>
<code class="go">
package main

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/0x4445565a/nice-things"
)

func handler(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Access-Control-Allow-Origin", "*")
	q := r.URL.Query()
	token := "Cool Person"
	if val, ok := q["token"]; ok {
		token = val[0]
	}
	s := niceThings.GeneratePhrase()
	fmt.Fprintf(w, "%s", strings.Replace(s, "{0}", token, -1))
}

/**
 * Create server at localhost:8080 use ?token=value to
 * set token.
 **/
func main() {
	http.HandleFunc("/", handler)
	http.ListenAndServe(":80", nil)
}
</code></pre>
